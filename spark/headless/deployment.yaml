apiVersion: apps/v1
kind: Deployment
metadata:
  name: spark-headless-service-controller
spec:
  selector:
    matchLabels:
      app: spark-headless-service-controller
  replicas: 1
  template:
    metadata:
      labels:
        app: spark-headless-service-controller
    spec:
      containers:
        - name: spark-headless-service-controller
          image: maxvan112/spark-headless:1.0
          command: ["/bin/sh"]
          args: ["-c", "python /config/config.py"]
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: config-volume
              mountPath: /config
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 1001
            runAsNonRoot: true
      imagePullSecrets:
        - name: hrdf-robot
      volumes:
        - name: config-volume
          configMap:
            name: spark-headless-service-controller-config
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pod-watcher
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch", "patch"]
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["create", "list", "get", "delete", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pod-watcher-binding
subjects:
  - kind: ServiceAccount
    name: default
    namespace: airflow
roleRef:
  kind: Role
  name: pod-watcher
  apiGroup: rbac.authorization.k8s.io