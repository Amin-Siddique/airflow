name: Deploy Spark
on:
  workflow_dispatch:
    inputs:
      ENV:
        required: false
        description: Select which environment you want to deploy to.
        type: choice
        options:
          - STAGE
          - PROD

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

permissions:
    contents: read
    packages: write

env:
  SPARK_TAG: ${{ github.sha }}
  SPARK_IMAGE_NAME: maxvan112/airflow-spark
  HEADLESS_IMAGE_NAME: maxvan112/airflow-spark

jobs:
  prepare_namespace:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/deploy_secrets
        with:
          namespace: spark
          harbor_robot: "${{ secrets.DOCKER_USER }}"
          harbor_token: "${{ secrets.DOCKER_PASSWORD }}"
          kubeconfig: ${{ secrets.KUBECONFIG }}


  build_custom_image:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - name: Build the Docker image
        run: | 
          $cmd = 'docker build . --tag  ${{ env.SPARK_IMAGE_NAME }}:${{ env.SPARK_TAG }} --file helm/spark/Dockerfile'
          $cleaned_command = $cmd.Replace('"', '')
          Invoke-Expression $cleaned_command

      - name: Log into registry
        run: |
            docker logout |  docker login   -u "${{ secrets.DOCKER_USER }}" -p "${{ secrets.DOCKER_PASSWORD }}"

      - name: Push image
        run: |
          docker push ${{ env.SPARK_IMAGE_NAME }}:${{ env.SPARK_TAG }}
  
      - name: Remove Dangling Image
        run: |
          docker image prune -a -f

  deploy_spark:
    runs-on: self-hosted
    needs: [prepare_namespace, build_custom_image]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/deploy_helm/
        with:
          repo: oci://registry-1.docker.io/bitnamicharts
          repo_url: spark
          release: spark
          values: ../../../../helm/spark/values.yaml
          values_override: ../../../../helm/spark/override.yaml
          namespace: spark
          harbor_robot: "${{ secrets.DOCKER_USER }}"
          harbor_token: "${{ secrets.DOCKER_PASSWORD }}"
          kubeconfig: ${{ secrets.KUBECONFIG }}
          image_tag: ${{env.SPARK_TAG}}
          additional_flags: 
          

  build_headless_image:
        runs-on: self-hosted
        needs: [prepare_namespace]
        steps:
            - uses: actions/checkout@v3
            - name: Build the Docker image
              run: | 
                $cmd = 'docker build . --tag  ${{ env.HEADLESS_IMAGE_NAME }}:${{ env.SPARK_TAG }} --file helm/spark/headless/Dockerfile'
                $cleaned_command = $cmd.Replace('"', '')
                Invoke-Expression $cleaned_command

            - name: Log into registry
              run: |
                    docker logout |  docker login   -u "${{ secrets.DOCKER_USER }}" -p "${{ secrets.DOCKER_PASSWORD }}"

            - name: Push image
              run: |
                docker push ${{ env.HEADLESS_IMAGE_NAME }}:${{ env.SPARK_TAG }}

            - name: Remove Dangling Image
              run: |
                  docker image prune -a -f

  deploy_headless:
        runs-on: self-hosted
        needs: [prepare_namespace, build_headless_image]
        steps:
            - uses: actions/checkout@v3
            - name: Deploy headless spark
              shell: pwsh
              run: |
                kubectl apply -f  ../../../../helm/spark/headless/configmap.yaml -n airflow
                kubectl apply -f  ../../../../helm/spark/headless/deployment.yaml -n airflow
                kubectl set image deployment spark-headless-service-controller spark-headless-service-controller=${HEADLESS_IMAGE_NAME}:${SPARK_TAG} -n airflow


            